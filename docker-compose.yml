version: '3'
services:
#  creditapp:
#    container_name: creditapp
#    image: creditapp
#    build:
#      context: ./
#      dockerfile: Dockerfile
#    ports:
#      - "8000:8000"
#      - "8084:8084"
#    volumes:
#      - $HOME/app:/var/app
#    depends_on:
#      - broker
#      - elasticsearch
#      - mysql
#    environment:
#      - kafka.group.id=group_id
#      - spring.kafka.bootstrap-servers=broker:29092
#      - kafka.consumer.group.id=group_id
#      - spring.datasource.url=jdbc:mysql://mysql:3306/carts?useUnicode=true&characterEncoding=utf8&useSSL=false&createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true
#      - spring.datasource.username=root
#      - spring.datasource.password=root
#      - spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#      - spring.jpa.hibernate.ddl-auto=update
#      - spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
#      - spring.jpa.properties.hibernate.show_sql=true
#      - elasticsearch.host=elasticsearch
#      - elasticsearch.port=9200
#    networks:
#      - my-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - my-network

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      GROUP_ID: driver-group-id
      KAFKA_CREATE_TOPICS: "contact-info-events"
    networks:
      - my-network
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "9090:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=broker:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=localhost:2181
    networks:
      - my-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    container_name: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    networks:
      - my-network

  mysql:
    image: mysql:8.0.25
    platform: linux/x86_64
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=creditapp
      - MYSQL_PASSWORD=root
    volumes:
      - ./mysql:/docker-entrypoint-initdb.d/:ro
    networks:
      - my-network

networks:
  my-network:
